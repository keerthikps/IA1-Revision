gcc -g p5final.c
gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) br main
Breakpoint 1 at 0x868: file p5final.c, line 29.
(gdb) r
Starting program: /home/runner/IA1-Revision/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p5final.c:29
29    n=input();
(gdb) s
input () at p5final.c:3
3   {
(gdb) n
5     printf("Enter a number\n");
(gdb) n
Enter a number
6     scanf("%f",&n);
(gdb) n
9
7     return n;
(gdb) n
8   }
(gdb) n
main () at p5final.c:30
30    x=my_sqrt(n);
(gdb) s
my_sqrt (n=9) at p5final.c:12
12    x=n;
(gdb) n
13    y=1;
(gdb) n
14    e=0.000001;
(gdb) n
15    while(x-y>e)
(gdb) n
17      x=(x+y)/2;
(gdb) n
18      y=n/x;
(gdb) n
15    while(x-y>e)
(gdb) n
17      x=(x+y)/2;
(gdb) n
18      y=n/x;
(gdb) n
15    while(x-y>e)
(gdb) n
17      x=(x+y)/2;
(gdb) n
18      y=n/x;
(gdb) n
15    while(x-y>e)
(gdb) n
17      x=(x+y)/2;
(gdb) n
18      y=n/x;
(gdb) n
15    while(x-y>e)
(gdb) n
17      x=(x+y)/2;
(gdb) n
18      y=n/x;
(gdb) n
15    while(x-y>e)
(gdb) n
20    return x;
(gdb) n
21  }
(gdb) n
main () at p5final.c:31
31    output(n,x);
(gdb) s
output (n=9, sqrt_result=3) at p5final.c:24
24    printf("Square root of %f is %f\n",n,sqrt_result);
(gdb) n
Square root of 9.000000 is 3.000000
25  }
(gdb) n
main () at p5final.c:32
32    return 0;
(gdb) c
Continuing.
[Inferior 1 (process 375) exited normally]
(gdb) q